SEQUENCE @startuml

participant "Voicemanager" as VM
participant XCS
participant DataService
participant CRS
participant EventNotifier
participant ELOS
participant CCC


activate XCS

XCS -> DataService : GET  "/vehicle/internal/${vin}"
activate DataService
DataService --> XCS : 200 - (homeCountry : "/homeCountry", positionCountry : "/positionCountry", brand : "/brand")
deactivate DataService

XCS -> CRS : POST "/routingTargets/find" (eventId : "${eventId}", serviceType : "${serviceType}", vin : "${vin}", homeCountry : "${homeCountry}", positionCountry : "${positionCountry}", brand : "${brand}")
activate CRS
CRS --> XCS : 200 - (voiceTargets : "/voiceTargets")
deactivate CRS

alt "${xcsServiceType} == 'ACall'"
XCS -> EventNotifier : PUT "/xcs/notify/${eventId}" (homeCountry : "${homeCountry}", positionCountry : "${positionCountry}", brand : "${brand}")
activate EventNotifier
EventNotifier --> XCS : 200
deactivate EventNotifier
end

alt "${xcsServiceType} == 'BCall'"
XCS -> ELOS : PUT "/xcs/notify/${eventId}" (homeCountry : "${homeCountry}", positionCountry : "${positionCountry}", brand : "${brand}")
activate ELOS
ELOS --> XCS : 200
deactivate ELOS
end

XCS -> CCC : POST "/xcs/eventReceived" (eventId : "${eventId}", serviceType : "${serviceType}", homeCountry : "${homeCountry}", positionCountry : "${positionCountry}", brand : "${brand}")
activate CCC
CCC --> XCS : 200
deactivate CCC

XCS -> VM : POST "/setupCall" (eventId : "${eventId}", vin : "${vin}", voiceTargets : "${voiceTargets}")
activate VM
VM --> XCS : 200
deactivate XCS
deactivate VM

@enduml
