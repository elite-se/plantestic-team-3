swagger: "2.0"
info:
  description: "This is a swagger definition for the plantestic test diagrams"
  version: "1.0.0"
  title: "Plantestic Team03 Test"
paths:

  /testA:
    get:
      tags:
        - "stub_get_tester"
      responses:
        "200":
          description: "successfully saved"


  /testA/bye:
    get:
      tags:
        - "complex_tester"
      responses:
        "400":
          description: "error"


  /testB/hello:
    get:
      tags:
        - "minimal_hello"
      responses:
        "200":
          description: "success"

    post:
        tags:
          - "complex_tester"
        responses:
          "200":
            description: "success"

  /testB/hello/{id}:
    post:
      tags:
        - "complex_hello"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
        - in: "path"
          name: "id"
          type: "string"
          required : true
#        - in: "formData"
#          name: "varA"
#          type: "number"
#          required: true
#        - in: "formData"
#          name: "varB"
#          type: "number"
#          required: true
      responses:
        "200":
          description: "success"
          schema:
            type: "object"
            required:
              - "itemA"
              - "itemB"
            properties:
              itemA:
                type: "string"
                example: "value1"
              itemB:
                type: "string"
                example: "value2"


  /testC/bye:
      get:
          tags:
              - "tester_out"
          responses:
            "200":
                description: "success"

  /CRS/ccc/rerouteOptions:
    post:
      tags:
        - "rerouting"
#      parameters:
#        - in: "formData"
#          name: "countryCode"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "positionCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "sourceEventType"
#          type: "string"
#          required: true
      responses:
        "200":
          description: "success"
          schema:
            type: "object"
            properties:
              uiswitch:
                type: "string"
                example: "/UISWITCH"
              reroute:
                type: "string"
                example: "/REROUTE"
              warmhandover:
                type: "string"
                example: "/WARMHANDOVER"

  /Voicemanager/ccc/events/{eventId}/isconnected:
    get:
      tags:
        - "rerouting"
      parameters:
        - name: "eventId"
          in: "path"
          description: "An event id"
          required: true
          type: "string"
      responses:
        "200":
          description: "success"
          schema:
            type: "object"
            required:
              - "VoiceStatus"
            properties:
              VoiceStatus:
                type: "object"
                required:
                  - "eventId1"
                  - "agent1"
                  - "agent2"
                properties:
                  eventId1:
                    type: "string"
                  agent1:
                    type: "object"
                    properties:
                      connectionStatus:
                        type: "string"
                  agent2:
                    type: "object"
                    properties:
                      connectionStatus:
                        type: "string"
        "400":
          description: "failure"
        "404":
          description: "failure"
        "500":
          description: "failure"

  /DataService/vehicle/internal/{vin}:
    get:
      tags:
        - "x_call"
      parameters:
        - name: "vin"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "success"
          schema:
            type: "object"
            properties:
              homeCountry:
                type: "string"
              positionCountry:
                type: "string"
              brand:
                type: "string"

  /CRS/routingTargets/find:
    post:
      tags:
        - "x_call"
#      parameters:
#        - in: "eventId"
#          name: "homeCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "serviceType"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "vin"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "homeCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "positionCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "brand"
#          type: "string"
#          required: true
      responses:
        "200":
          description: "success"
          schema:
            type: "object"
            properties:
              voiceTargets:
                type: "string"

  /EventNotifier/xcs/notify/{eventId}:
    put:
      tags:
        - "x_call"
      parameters:
        - name: "eventId"
          in: "path"
          description: "An event id"
          required: true
          type: "string"
#        - in: "formData"
#          name: "homeCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "positionCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "brand"
#          type: "string"
#          required: true
      responses:
        "200":
          description: "success"

  /ELOS/xcs/notify/{eventId}:
    put:
      tags:
        - "x_call"
      parameters:
        - in: "path"
          name: "eventId"
          required: true
          type: "string"
#        - in: "eventId"
#          name: "homeCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "homeCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "positionCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "brand"
#          type: "string"
#          required: true
      responses:
        "200":
          description: "success"

  /CCC/xcs/eventReceived:
    post:
      tags:
        - "x_call"
#      parameters:
#        - in: "eventId"
#          name: "homeCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "serviceType"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "homeCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "positionCountry"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "brand"
#          type: "string"
#          required: true
      responses:
        "200":
          description: "success"

  /Voicemanager/setupCall:
    post:
      tags:
        - "x_call"
#      parameters:
#        - in: "formData"
#          name: "eventId"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "vin"
#          type: "string"
#          required: true
#        - in: "formData"
#          name: "voiceTargets"
#          type: "string"
#          required: true
      responses:
        "200":
          description: "success"

  /Person/getAge:
    get:
      tags:
        - "parameter_pass"
      parameters:
      responses:
        "200":
          description: "success"
          schema:
             $ref: "#/definitions/Age"

  /Person/checkAge:
    post:
      tags:
        - "parameter_pass"
#      parameters:
#        - in: "formData"
#          name: "age"
#          type: "integer"
#          required: true
      responses:
        "200":
          description: "success"

definitions:
  Age:
    type: "object"
    required:
      - "years"
    properties:
      years:
        type: "integer"